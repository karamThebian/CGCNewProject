openapi: 3.0.1
info:
  title: Cloud Gate Consulting Hospital Management System
  description: This is the appointment's microservice.
  contact:
    email: karam.thebian@ieee.org
  version: 1.0.0
servers:
  - url: https://localhost:6002/api/v1
  - url: http://localhost:6002/api/v1

paths:
  /appointment/:
    get:

      summary: Get all appointments
      description: returns all appointments
      operationId: get_all_appointments
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Appointment"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Appointment"
        400:
          description: Invalid name value
          content: {}
        401:
          description: Unauthorized Access, Token Invalid
      x-openapi-router-controller: openapi_server.controllers.default_controller


    post:

      summary: Add a new appointment to the database
      description: adds a new appointment to the database
      operationId: add_appointment
      requestBody:
        description: Appointment object that needs to be added to the database
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Appointment"
          application/xml:
            schema:
              $ref: "#/components/schemas/Appointment"
        required: true
      responses:
        200:
          description: Appointment Successfully Added
          content: {}
        401:
          description: Unauthorized Access, Token Invalid
        405:
          description: Invalid input
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /appointment/{iddelete}:
    put:
      summary: Update an existing appointment
      description: updates an existing appointment in the database
      operationId: edit_appointment
      parameters:
        - name: iddelete
          in: path
          description: id value that needs to be considered for filter
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Appointment object that needs to be Modified in the databse
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Appointment"
          application/xml:
            schema:
              $ref: "#/components/schemas/Appointment"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}

        401:
          description: Unauthorized access, Token Invalid
          content: {}
        404:
          description: patient not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    delete:

      summary: Deletes an Appointment
      description: deletes an appointment by id
      operationId: delete_appointment
      parameters:
        - name: iddelete
          in: path
          description: id that needs to be considered for filter
          required: true
          schema:
            type: integer
            format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        401:
          description: Unauthorized access, Invalid Token.
          content: {}
        404:
          description: id not found
          content: {}
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /appointment/patient/{name}:
    get:

      summary: Finds Appointments by patient name
      description: returns Appointment by patient name
      operationId: find_appointments_by_patient_name
      parameters:
        - name: name
          in: path
          description: name values that need to be considered for filter
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Appointment"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Appointment"
        400:
          description: Invalid name value
          content: {}

        401:
          description: Unauthorized access, Token Invalid
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /appointment/doctor/{name}:
    get:

      summary: Finds Appointments by doctor name
      description: returns Appointment by doctor name
      operationId: find_appointments_by_doctor_name
      parameters:
        - name: name
          in: path
          description: name values that need to be considered for filter
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Appointment"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Appointment"
        400:
          description: Invalid name value
          content: {}
        401:
          description: Unauthorized access, Token Invalid
          content: {}
      x-openapi-router-controller: openapi_server.controllers.default_controller

components:


  schemas:
    Appointment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        patientName:
          type: string
        issue:
          type: string
        doctor:
          type: string

        clinic:
          type: string

        date:
          type: string
          format: date-time







