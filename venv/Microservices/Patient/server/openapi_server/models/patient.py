# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.medicine import Medicine
from openapi_server import util

from openapi_server.models.medicine import Medicine  # noqa: E501

class Patient(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, blood_type=None, medication=None, username=None, password=None, address=None, phone_number=None, date_of_birth=None, private=None):  # noqa: E501
        """Patient - a model defined in OpenAPI

        :param id: The id of this Patient.  # noqa: E501
        :type id: int
        :param name: The name of this Patient.  # noqa: E501
        :type name: str
        :param blood_type: The blood_type of this Patient.  # noqa: E501
        :type blood_type: str
        :param medication: The medication of this Patient.  # noqa: E501
        :type medication: List[Medicine]
        :param username: The username of this Patient.  # noqa: E501
        :type username: str
        :param password: The password of this Patient.  # noqa: E501
        :type password: str
        :param address: The address of this Patient.  # noqa: E501
        :type address: str
        :param phone_number: The phone_number of this Patient.  # noqa: E501
        :type phone_number: str
        :param date_of_birth: The date_of_birth of this Patient.  # noqa: E501
        :type date_of_birth: date
        :param private: The private of this Patient.  # noqa: E501
        :type private: bool
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'blood_type': str,
            'medication': List[Medicine],
            'username': str,
            'password': str,
            'address': str,
            'phone_number': str,
            'date_of_birth': date,
            'private': bool
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'blood_type': 'bloodType',
            'medication': 'medication',
            'username': 'username',
            'password': 'password',
            'address': 'address',
            'phone_number': 'phoneNumber',
            'date_of_birth': 'dateOfBirth',
            'private': 'private'
        }

        self._id = id
        self._name = name
        self._blood_type = blood_type
        self._medication = medication
        self._username = username
        self._password = password
        self._address = address
        self._phone_number = phone_number
        self._date_of_birth = date_of_birth
        self._private = private

    @classmethod
    def from_dict(cls, dikt) -> 'Patient':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Patient of this Patient.  # noqa: E501
        :rtype: Patient
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Patient.


        :return: The id of this Patient.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Patient.


        :param id: The id of this Patient.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Patient.


        :return: The name of this Patient.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Patient.


        :param name: The name of this Patient.
        :type name: str
        """

        self._name = name

    @property
    def blood_type(self):
        """Gets the blood_type of this Patient.


        :return: The blood_type of this Patient.
        :rtype: str
        """
        return self._blood_type

    @blood_type.setter
    def blood_type(self, blood_type):
        """Sets the blood_type of this Patient.


        :param blood_type: The blood_type of this Patient.
        :type blood_type: str
        """

        self._blood_type = blood_type

    @property
    def medication(self):
        """Gets the medication of this Patient.


        :return: The medication of this Patient.
        :rtype: List[Medicine]
        """
        return self._medication

    @medication.setter
    def medication(self, medication):
        """Sets the medication of this Patient.


        :param medication: The medication of this Patient.
        :type medication: List[Medicine]
        """

        self._medication = medication

    @property
    def username(self):
        """Gets the username of this Patient.


        :return: The username of this Patient.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this Patient.


        :param username: The username of this Patient.
        :type username: str
        """

        self._username = username

    @property
    def password(self):
        """Gets the password of this Patient.


        :return: The password of this Patient.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this Patient.


        :param password: The password of this Patient.
        :type password: str
        """

        self._password = password

    @property
    def address(self):
        """Gets the address of this Patient.


        :return: The address of this Patient.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Patient.


        :param address: The address of this Patient.
        :type address: str
        """

        self._address = address

    @property
    def phone_number(self):
        """Gets the phone_number of this Patient.


        :return: The phone_number of this Patient.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this Patient.


        :param phone_number: The phone_number of this Patient.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def date_of_birth(self):
        """Gets the date_of_birth of this Patient.


        :return: The date_of_birth of this Patient.
        :rtype: date
        """
        return self._date_of_birth

    @date_of_birth.setter
    def date_of_birth(self, date_of_birth):
        """Sets the date_of_birth of this Patient.


        :param date_of_birth: The date_of_birth of this Patient.
        :type date_of_birth: date
        """

        self._date_of_birth = date_of_birth

    @property
    def private(self):
        """Gets the private of this Patient.


        :return: The private of this Patient.
        :rtype: bool
        """
        return self._private

    @private.setter
    def private(self, private):
        """Sets the private of this Patient.


        :param private: The private of this Patient.
        :type private: bool
        """

        self._private = private
